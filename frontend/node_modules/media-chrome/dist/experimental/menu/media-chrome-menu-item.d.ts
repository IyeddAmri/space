export namespace Attributes {
    const TYPE: string;
    const VALUE: string;
    const CHECKED: string;
    const DISABLED: string;
}
export default MediaChromeMenuItem;
declare const MediaChromeMenuItem_base: any;
/**
 * @slot - Default slotted elements.
 *
 * @attr {(''|'radio'|'checkbox')} type - This attribute indicates the kind of command, and can be one of three values.
 * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.
 *
 * @cssproperty --media-menu-item-transition - `transition` of menu-item.
 * @cssproperty --media-menu-item-checked-background - `background` of checked menu-item.
 * @cssproperty --media-menu-item-outline - `outline` menu-item.
 * @cssproperty --media-menu-item-outline-offset - `outline-offset` of menu-item.
 * @cssproperty --media-menu-item-hover-background - `background` of hovered menu-item.
 * @cssproperty --media-menu-item-hover-outline - `outline` of hovered menu-item.
 * @cssproperty --media-menu-item-hover-outline-offset - `outline-offset` of hovered menu-item.
 * @cssproperty --media-menu-item-focus-shadow - `box-shadow` of the :focus-visible state
 */
export class MediaChromeMenuItem extends MediaChromeMenuItem_base {
    [x: string]: any;
    static get observedAttributes(): string[];
    set type(arg: any);
    get type(): any;
    set value(arg: any);
    get value(): any;
    get text(): any;
    set checked(arg: boolean);
    get checked(): boolean;
    enable(): void;
    disable(): void;
    attributeChangedCallback(attrName: any, oldValue: any, newValue: any): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    handleClick(): void;
    #private;
}
