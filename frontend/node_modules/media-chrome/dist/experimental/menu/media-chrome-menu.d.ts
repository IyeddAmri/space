export function createMenuItem({ type, text, value, checked }: {
    type: any;
    text: any;
    value: any;
    checked: any;
}): any;
export function createIndicator(el: any, name: any): any;
export namespace Attributes {
    const STYLE: string;
    const HIDDEN: string;
    const DISABLED: string;
    const ANCHOR: string;
}
export default MediaChromeMenu;
/**
 * @extends {HTMLElement}
 *
 * @slot - Default slotted elements.
 * @slot header - An element shown at the top of the menu.
 * @slot checked-indicator - An icon element indicating a checked menu-item.
 *
 * @attr {boolean} disabled - The Boolean disabled attribute makes the element not mutable or focusable.
 * @attr {string} mediacontroller - The element `id` of the media controller to connect to (if not nested within).
 *
 * @cssproperty --media-primary-color - Default color of text / icon.
 * @cssproperty --media-secondary-color - Default color of background.
 * @cssproperty --media-text-color - `color` of text.
 *
 * @cssproperty --media-control-background - `background` of control.
 * @cssproperty --media-menu-layout - Set to `row` for a horizontal menu design.
 * @cssproperty --media-menu-flex-direction - `flex-direction` of menu.
 * @cssproperty --media-menu-gap - `gap` between menu items.
 * @cssproperty --media-menu-background - `background` of menu.
 * @cssproperty --media-menu-border-radius - `border-radius` of menu.
 *
 * @cssproperty --media-font - `font` shorthand property.
 * @cssproperty --media-font-weight - `font-weight` property.
 * @cssproperty --media-font-family - `font-family` property.
 * @cssproperty --media-font-size - `font-size` property.
 * @cssproperty --media-text-content-height - `line-height` of text.
 *
 * @cssproperty --media-icon-color - `fill` color of icon.
 * @cssproperty --media-menu-item-indicator-fill - `fill` color of indicator icon.
 * @cssproperty --media-menu-item-indicator-height - `height` of menu-item indicator.
 * @cssproperty --media-menu-item-indicator-vertical-align - `vertical-align` of menu-item indicator.
 * @cssproperty --media-menu-item-checked-indicator-display - `display` of check indicator.
 */
export class MediaChromeMenu extends HTMLElement {
    static get observedAttributes(): string[];
    static formatMenuItemText(text: any): any;
    constructor(options?: {});
    nativeEl: any;
    container: Element;
    enable(): void;
    disable(): void;
    handleEvent(event: any): void;
    connectedCallback(): void;
    disconnectedCallback(): void;
    attributeChangedCallback(attrName: any, oldValue: any, newValue: any): void;
    formatMenuItemText(text: any, data: any): any;
    get keysUsed(): string[];
    set anchor(arg: string);
    get anchor(): string;
    /**
     * Returns the anchor element when it is a floating menu.
     * @return {HTMLElement}
     */
    get anchorElement(): HTMLElement;
    get items(): HTMLInputElement[];
    get radioGroupItems(): HTMLInputElement[];
    get checkedItems(): HTMLInputElement[];
    set value(arg: string);
    get value(): string;
    focus(): void;
    handleSelection(event: any): void;
    handleMovement(event: any): void;
    #private;
}
